#ifndef TOKEN_H
#define TOKEN_H

typedef enum {
     TOKEN_EOF=0,
	 TOKEN_T_ARRAY=259,
	 TOKEN_T_AUTO=260,
	 TOKEN_T_BOOLEAN=261,
	 TOKEN_T_CHAR=262,
	 TOKEN_ELSE=263,
	 TOKEN_FALSE=264,
	 TOKEN_FOR=265,
	 TOKEN_FUNCTION=266,
	 TOKEN_IF=267,
	 TOKEN_T_INTEGER=268,
	 TOKEN_PRINT=269,
	 TOKEN_RETURN=270,
	 TOKEN_T_STRING=271,
	 TOKEN_TRUE=272,
	 TOKEN_VOID=273,
	 TOKEN_WHILE=274,
	 TOKEN_IDENT=275,
	 TOKEN_STRING_LITERAL=276,
	 TOKEN_CHAR_LITERAL=277,
	 TOKEN_INTEGER_LITERAL=278,
	 TOKEN_SEMICOLON=279,
	 TOKEN_COLON=280,
	 TOKEN_COMMA=281,
 	 TOKEN_LP=282,
	 TOKEN_RP=283,
	 TOKEN_LB=284,
	 TOKEN_RB=285,
	 TOKEN_LCB=286,
	 TOKEN_RCB=287,
	 TOKEN_INCREMENT=288,
	 TOKEN_DECREMENT=289,
	 TOKEN_NOT=290,
	 TOKEN_EXPONENT=291,
 	 TOKEN_MULT=292,
  	 TOKEN_DIV=293,
 	 TOKEN_MOD=294,
     TOKEN_ADD=295,
	 TOKEN_MINUS=296,
 	 TOKEN_GT=297,
 	 TOKEN_GE=298,
 	 TOKEN_LT=299,
 	 TOKEN_LE=300,
 	 TOKEN_EQ=301,
 	 TOKEN_NEQ=302,
 	 TOKEN_AND=303,
 	 TOKEN_OR=304,
 	 TOKEN_ASSIGN=305,
	 TOKEN_IDENT_ERROR=306,
	 TOKEN_STRING_ERROR=307,
	 TOKEN_CHAR_ERROR=308,
	 TOKEN_INTEGER_ERROR=309,
	 TOKEN_COMMENT_ERROR=310,
     TOKEN_SCAN_ERROR=311
} token_t;

#endif
